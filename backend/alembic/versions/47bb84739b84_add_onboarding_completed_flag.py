"""add onboarding completed flag

Revision ID: 47bb84739b84
Revises: a1b2c3d4e5f6
Create Date: 2025-08-17 16:31:03.272847

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '47bb84739b84'
down_revision: Union[str, None] = 'a1b2c3d4e5f6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('onboarding_completed', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.alter_column('educations', 'profile_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('educations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('educations_profile_id_fkey', 'educations', type_='foreignkey')
    op.create_foreign_key(None, 'educations', 'profiles', ['profile_id'], ['id'])
    op.alter_column('profiles', 'use_resume_sections',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('projects', 'profile_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('projects_profile_id_fkey', 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'profiles', ['profile_id'], ['id'])
    op.alter_column('publications', 'profile_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('publications', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('publications_profile_id_fkey', 'publications', type_='foreignkey')
    op.create_foreign_key(None, 'publications', 'profiles', ['profile_id'], ['id'])
    op.alter_column('skills', 'profile_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('skills', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('skills_profile_id_fkey', 'skills', type_='foreignkey')
    op.create_foreign_key(None, 'skills', 'profiles', ['profile_id'], ['id'])
    op.alter_column('volunteer_works', 'profile_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('volunteer_works', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('volunteer_works_profile_id_fkey', 'volunteer_works', type_='foreignkey')
    op.create_foreign_key(None, 'volunteer_works', 'profiles', ['profile_id'], ['id'])
    op.alter_column('work_experiences', 'profile_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('work_experiences', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('work_experiences_profile_id_fkey', 'work_experiences', type_='foreignkey')
    op.create_foreign_key(None, 'work_experiences', 'profiles', ['profile_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'onboarding_completed')
    op.drop_constraint(None, 'work_experiences', type_='foreignkey')
    op.create_foreign_key('work_experiences_profile_id_fkey', 'work_experiences', 'profiles', ['profile_id'], ['id'], ondelete='CASCADE')
    op.alter_column('work_experiences', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('work_experiences', 'profile_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'volunteer_works', type_='foreignkey')
    op.create_foreign_key('volunteer_works_profile_id_fkey', 'volunteer_works', 'profiles', ['profile_id'], ['id'], ondelete='CASCADE')
    op.alter_column('volunteer_works', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('volunteer_works', 'profile_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'skills', type_='foreignkey')
    op.create_foreign_key('skills_profile_id_fkey', 'skills', 'profiles', ['profile_id'], ['id'], ondelete='CASCADE')
    op.alter_column('skills', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('skills', 'profile_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'publications', type_='foreignkey')
    op.create_foreign_key('publications_profile_id_fkey', 'publications', 'profiles', ['profile_id'], ['id'], ondelete='CASCADE')
    op.alter_column('publications', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('publications', 'profile_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key('projects_profile_id_fkey', 'projects', 'profiles', ['profile_id'], ['id'], ondelete='CASCADE')
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'profile_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('profiles', 'use_resume_sections',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_constraint(None, 'educations', type_='foreignkey')
    op.create_foreign_key('educations_profile_id_fkey', 'educations', 'profiles', ['profile_id'], ['id'], ondelete='CASCADE')
    op.alter_column('educations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('educations', 'profile_id',
               existing_type=sa.UUID(),
               nullable=False)
    # ### end Alembic commands ###
